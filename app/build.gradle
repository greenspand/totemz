apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 2

version "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "4g"
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }
    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        applicationId "ro.cluj.totemz"
        minSdkVersion 18
        targetSdkVersion 25
        versionCode 1
        versionName "${version}"
        vectorDrawables.useSupportLibrary = true
        /** Keep language resources in libraries only for supported locales*/
        resConfigs "en", "de", "ro"
    }

    buildTypes {
        def localHost = InetAddress.getLocalHost().getCanonicalHostName()
        def globalHost = "totemz.ddns.net"
        debug {
            // This will automatically detect the IP address of the machine building RealmTasks.
            // It is assumed that this machine is also running the Object Server.
            // If not, replace 'host' with the IP of the machine hosting the server.
            buildConfigField "String", "OBJECT_SERVER_IP", "\"${globalHost}\""
            minifyEnabled false
            multiDexEnabled true
        }
        release {
            minifyEnabled false
            shrinkResources false
            multiDexEnabled true
            // This will automatically detect the IP address of the machine building RealmTasks.
            // It is assumed that this machine is also running the Object Server.
            // If not, replace 'host' with the IP of the machine hosting the server.
            buildConfigField "String", "OBJECT_SERVER_IP", "\"${globalHost}\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    productFlavors {
    }
}

realm {
    syncEnabled = true
}

kapt {
    correctErrorTypes = true
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

kapt {
    generateStubs = true
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$supportlibVersion"
    compile "com.android.support:animated-vector-drawable:$supportlibVersion"
    compile "com.android.support:cardview-v7:$supportlibVersion"
    compile "com.android.support:cardview-v7:$supportlibVersion"
    compile "com.android.support:customtabs:$supportlibVersion"
    compile "com.android.support:recyclerview-v7:$supportlibVersion"
    compile "com.android.support:design:$supportlibVersion"


    compile "com.google.android.gms:play-services-maps:$playServicesVersion"
    compile "com.google.android.gms:play-services-ads:$playServicesVersion"
    compile "com.google.android.gms:play-services-auth-base:$playServicesVersion"
    compile "com.google.android.gms:play-services-location:$playServicesVersion"

    /**Map Utils*/
    compile 'com.google.maps.android:android-maps-utils:0.4+'

    /**Coroutines
     *
     */
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.14'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-nio:0.14'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.14'

    /**Firebase Core*/
    compile "com.google.firebase:firebase-core:$playServicesVersion"

    /**Firebase Push Notifications*/
    compile "com.google.firebase:firebase-messaging:$playServicesVersion"

    /**Firebase crashlitics*/
    compile "com.google.firebase:firebase-crash:$playServicesVersion"

    /**Firebase authentication*/
    compile "com.google.firebase:firebase-auth:$playServicesVersion"
    compile "com.google.android.gms:play-services-auth:$playServicesVersion"

    /**Kotlin extensions*/
    compile "com.greenspnd:kotlin-ext:$ktExtVersion"

    /**Permissions*/
    compile 'com.karumi:dexter:2.3.1'

    /**Logger*/
    compile 'com.jakewharton.timber:timber:4.5.1'

    /**Img loader*/
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'jp.wasabeef:picasso-transformations:2.1.0'

    /**Protocol Buffers*/
    compile 'com.squareup.wire:wire-runtime:2.2.0'

    /**MQTT*/
    compile "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$mqttVersion"
    compile "org.eclipse.paho:org.eclipse.paho.android.service:$mqttVersion"

    /**DI Framework*/
    compile "com.github.salomonbrys.kodein:kodein:$kodeinVersion"
    compile "com.github.salomonbrys.kodein:kodein-android:$kodeinVersion"

    /**Memory leaks detector*/
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // Android SDK
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    // Audience Network SDK. Only versions 4.6.0 and above are available
    compile 'com.facebook.android:audience-network-sdk:4.+'

    /**Rx Java*/
    compile "io.reactivex.rxjava2:rxandroid:$rxVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    /**Fabric IO crashlytics*/
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    /**Twitter authentication*/
    compile('com.twitter.sdk.android:twitter:2.3.2@aar') {
        transitive = true;
    }

    /**Pulse animation*/
    compile 'pl.bclogic:pulsator4droid:1.0.3'
}
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.google.gms.google-services'
