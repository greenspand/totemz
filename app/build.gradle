apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: "org.jlleitschuh.gradle.ktlint"

def versionMajor = 0
def versionMinor = 1
def versionPatch = 4

version "${versionMajor}.${versionMinor}.${versionPatch}"

def buildNumberProduction = 12
def buildNumberDebugging = 999999

def buildVersionCode = { ->
    if (gradle.startParameter.taskNames.contains(":app:assembleRelease")) {
        return buildNumberProduction
    } else {
        return buildNumberDebugging
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    /*Disable splits if not building for production*/
    if (!project.hasProperty('production')) {
        splits.abi.enable = false
    }

    /**CONFIGURE SPLITS*/
    splits {
        abi {
            /*Enable splits only if we perform the build production release task*/
            enable gradle.startParameter.taskNames.contains(":app:assembleRelease")
            reset()
            include 'armeabi', 'armeabi-v7a', 'arm64-v8a', "x86", 'x86_64', "mips", 'mips64'
            /*No need for universal apk*/
            universalApk false
        }
    }

    // map for the version code
    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 4, 'x86': 5, 'x86_64': 6, 'mips64': 7]

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) + buildNumberProduction
        }
    }

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        applicationId "ro.cluj.totemz"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode buildVersionCode()
        versionName "$version"
        vectorDrawables.useSupportLibrary = true
        /** Keep language resources in libraries only for supported locales*/
        resConfigs "en", "de", "ro"
    }

    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Specifies a flavour dimension for data
    flavorDimensions "data"

    productFlavors {
        production {
            dimension "data"
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation "com.android.support:appcompat-v7:$supportlibVersion"
    implementation "com.android.support:animated-vector-drawable:$supportlibVersion"
    implementation "com.android.support:cardview-v7:$supportlibVersion"
    implementation "com.android.support:customtabs:$supportlibVersion"
    implementation "com.android.support:recyclerview-v7:$supportlibVersion"
    implementation "com.android.support:design:$supportlibVersion"
    implementation "com.android.support:support-dynamic-animation:$supportlibVersion"
    implementation "com.android.support:support-core-utils:$supportlibVersion"

    /**Nearby API 2.0 Used for peer to peer communication*/
    implementation "com.google.android.gms:play-services-nearby:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.android.gms:play-services-ads:$playServicesVersion"
    implementation "com.google.android.gms:play-services-auth-base:$playServicesVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"



    /**MultiDex*/
    implementation 'com.android.support:multidex:1.0.2'

    /**Map Utils*/
    implementation 'com.google.maps.android:android-maps-utils:0.4+'

    /**Kotlin*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    /**Coroutines**/
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.18'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.18'

    /**Firebase Core*/
    implementation "com.google.firebase:firebase-core:$playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"

    /**Firebase DB*/
    implementation "com.google.firebase:firebase-database:$playServicesVersion"

    /**Firebase Geofire*/
    implementation 'com.firebase:geofire-android:2.1.1'

    /**Firebase Push Notifications*/
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"

    /**Firebase crashlitics*/
    implementation "com.google.firebase:firebase-crash:$playServicesVersion"

    /**Firebase authentication*/
    implementation "com.google.firebase:firebase-auth:$playServicesVersion"
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"

    /**Kotlin extensions*/
    implementation "com.greenspand:kotlin-ext:$ktExtVersion"

    /**Permissions*/
    implementation 'com.karumi:dexter:4.1.0'

    /**Logger*/
    implementation 'com.jakewharton.timber:timber:4.5.1'

    /**Img loader*/
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'jp.wasabeef:picasso-transformations:2.1.2'

    /**Protocol Buffers*/
    implementation 'com.squareup.wire:wire-runtime:2.2.0'

    /**MQTT*/
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$mqttVersion"
    implementation("org.eclipse.paho:org.eclipse.paho.android.service:$mqttVersionSnapshot@aar") {
        exclude module: 'support-v4'
    }

    /**DI Framework*/
    implementation "com.github.salomonbrys.kodein:kodein:$kodeinVersion"
    implementation "com.github.salomonbrys.kodein:kodein-android:$kodeinVersion"

    /**Memory leaks detector*/
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // Android SDK
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    // Audience Network SDK. Only versions 4.6.0 and above are available
    implementation 'com.facebook.android:audience-network-sdk:4.+'

    /**Rx Java*/
    implementation "io.reactivex.rxjava2:rxandroid:$rxVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxVersion"

    /**Fabric IO crashlytics*/
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    /**Twitter authentication*/
    implementation('com.twitter.sdk.android:twitter:2.3.2@aar') {
        transitive = true;
    }

    /**Pulse animation*/
    implementation 'pl.bclogic:pulsator4droid:1.0.3'
}
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.google.gms.google-services'
