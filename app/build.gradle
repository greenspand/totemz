apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'com.getkeepsafe.dexcount'


def versionMajor = 0
def versionMinor = 1
def versionPatch = 4

version "${versionMajor}.${versionMinor}.${versionPatch}"

def buildNumberProduction = 13
def buildNumberDebugging = 999999

def buildVersionCode = { ->
    if (gradle.startParameter.taskNames.contains(":app:assembleRelease")) {
        return buildNumberProduction
    } else {
        return buildNumberDebugging
    }
}
androidExtensions {
    experimental = true
}
ext {
    supportLibVersion = '27.1.0'
    coroutinesVersion = '0.22.5'
    retrofitVersion = '2.3.0'
    playServicesVersion = '12.0.1'
    lifecycleVersion = "1.0.0"
    rxVersion = '2.0.1'
    kodeinVersion = "4.1.0"
    iotaVersion = "0.9.10"
    leakCanaryVersion = "1.5"
    kodeinVersion= '4.1.0'
    mqttVersion='1.2.0'
    kotlinExtVersion = '1.0.9'
}

android {
    compileSdkVersion 27
    /*Disable splits if not building for production*/
    if (!project.hasProperty('production')) {
        splits.abi.enable = false
    }
    /*CONFIGURE SPLITS*/
    splits {
        abi {
            /*Enable splits only if we perform the build production release task*/
            enable gradle.startParameter.taskNames.contains(":app:assembleRelease")
            reset()
            include 'armeabi', 'armeabi-v7a', 'arm64-v8a', "x86", 'x86_64', "mips", 'mips64'
            /*No need for universal apk*/
            universalApk false
        }
    }
    // map for the version code
    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 4, 'x86': 5, 'x86_64': 6, 'mips64': 7]
    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) + buildNumberProduction
        }
    }
    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        applicationId "ro.cluj.totemz"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode buildVersionCode()
        versionName "$version"
        vectorDrawables.useSupportLibrary = true
        /* Keep language resources in libraries only for supported locales*/
        resConfigs "en", "de", "ro"
    }
    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Specifies a flavour dimension for data
    flavorDimensions "data"
    productFlavors {
        production {
            dimension "data"
        }
    }
    lintOptions {
        abortOnError true
        absolutePaths false
        lintConfig rootProject.file('lint.xml')
    }
    configurations {
        // IOTA
        all*.exclude module: 'gson'
        all*.exclude group: 'org.apache.commons'
        all*.exclude group: 'commons-io'
        all*.exclude group: 'org.slf4j'
        //org.knowm.xchange
        all*.exclude group: 'org.java-websocket'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '27.0.3'
    dexOptions {
        incremental true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:animated-vector-drawable:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:customtabs:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:support-dynamic-animation:$supportLibVersion"
    implementation "com.android.support:support-core-utils:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    /*Play services*/
    implementation "com.google.android.gms:play-services-nearby:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:$playServicesVersion"
    implementation "com.google.android.gms:play-services-ads:$playServicesVersion"
    implementation "com.google.android.gms:play-services-auth-base:$playServicesVersion"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"

    /*Firebase*/
    implementation "com.google.firebase:firebase-core:$playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"
    implementation "com.google.firebase:firebase-database:$playServicesVersion"
    implementation 'com.firebase:geofire-android:2.2.0'
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"
    implementation "com.google.firebase:firebase-auth:$playServicesVersion"

    /*IOTA*/
    implementation "com.github.iotaledger:iota~lib~java:$iotaVersion"

    /*Moshi JSON Parsing*/
    implementation 'com.squareup.moshi:moshi-kotlin:1.5.0'

    /*MultiDex*/
    implementation 'com.android.support:multidex:1.0.3'

    /*Map Utils*/
    implementation 'com.google.maps.android:android-maps-utils:0.5+'

    /*Kotlin*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /*Coroutines**/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation 'net.hockeyapp.android:HockeySDK:5.1.0'

    /*Kotlin extensions*/
    implementation "com.greenspand:kotlin-ext:$kotlinExtVersion"
    implementation 'androidx.core:core-ktx:0.2'
    implementation 'com.google.code.gson:gson:2.8.2'

    /*Permissions*/
    implementation 'com.karumi:dexter:4.2.0'

    /*Logger*/
    implementation 'com.jakewharton.timber:timber:4.6.1'

    /*Img loader*/
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'jp.wasabeef:picasso-transformations:2.1.2'

    /*Protocol Buffers*/
    implementation 'com.squareup.wire:wire-runtime:2.2.0'

    /*MQTT*/
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$mqttVersion"

    /*DI Framework*/
    implementation "com.github.salomonbrys.kodein:kodein:$kodeinVersion"
    implementation "com.github.salomonbrys.kodein:kodein-android:$kodeinVersion"

    /*Memory leaks detector*/
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // Facebook SDK
    implementation 'com.facebook.android:facebook-core:[4,5)'
    implementation 'com.facebook.android:facebook-login:[4,5)'

    /*Twitter authentication*/
    implementation('com.twitter.sdk.android:twitter:3.2.0@aar') {
        transitive = true
    }

    /*Pulse animation*/
    implementation 'pl.bclogic:pulsator4droid:1.0.3'

    /*Testing*/
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'org.amshove.kluent:kluent-android:1.28'
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'
    testImplementation 'org.assertj:assertj-core:3.9.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.7.1'
}
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.google.gms.google-services'
